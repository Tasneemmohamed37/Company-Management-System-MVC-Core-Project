@model IEnumerable<UserViewModel>
@{
    ViewData["Title"] = "Users";

}

@if (TempData["Message"] is not null)
{

    <div class="alert alert-primary mt-3 d-flex justify-content-between align-items-center">
        <span class="flex-grow-1">@TempData["Message"]</span>
        <a asp-action="Index" class="btn btn-secondary">❌</a>
    </div>

}

<h1>Users <a asp-action="Create" class="btn btn-success">+ Add</a> </h1>

@if(Model.Count() > 0)
{
        <div class="mt-5 row justify-content-center">
        <form asp-action="Index" class="row col-8 offset-1">
            <div class="col-8">
                <input class="form-control" id="searchtext" name="SearchValue" placeholder="Search By Name" />
            </div>
            <div class="col-4">
                <input type="submit" value="Search" class="btn btn-success" />
            </div>
        </form>
     </div>

    <table class="mt-3 table table-striped table-hover">
        <thead>
            <tr>
                <td>@Html.DisplayNameFor(U => U.Email)</td>
                <td>@Html.DisplayNameFor(U => U.FName)</td>
                <td>@Html.DisplayNameFor(U => U.LName)</td>
                <td>@Html.DisplayNameFor(U => U.PhoneNumber)</td>
                <td>Details</td>
                <td>Update</td>
                <td>Delete</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(M => user.Email)</td>
                    <td>@Html.DisplayFor(M => user.FName)</td>
                    <td>@Html.DisplayFor(M => user.LName)</td>
                    <td>@Html.DisplayFor(M => user.PhoneNumber)</td>
                    

                    <partial name="_ButtonsPartialView" model="@user.Id" />
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="mt-4 alert alert-warning">
        <h3>There is NO Users!!</h3>
    </div>
}

